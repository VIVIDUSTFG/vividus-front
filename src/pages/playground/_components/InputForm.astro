---
const { submissions } = Astro.props;
---

<form
  id="videoForm"
  method="POST"
  action="/playground/api/submit-inference"
  enctype="multipart/form-data"
>
  <div class="grid gap-4 mt-4 grid-cols-2">
    <div
      class="p-4 bg-white border border-gray-200 rounded-lg col-span-2 lg:col-span-1 shadow-sm dark:border-gray-700 sm:p-6 dark:bg-gray-800"
    >
      <div class="flex items-center justify-center w-full">
        <label
          for="dropzone-file"
          class="flex flex-col items-center justify-center w-full h-80 border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-gray-50 hover:bg-gray-100 relative"
        >
          <div
            id="droparea"
            class="flex flex-col items-center justify-center pt-5 pb-6 z-10"
          >
            <svg
              class="w-8 h-8 mb-4 text-gray-500"
              aria-hidden="true"
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 20 16"
            >
              <path
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M13 13h3a3 3 0 0 0 0-6h-.025A5.56 5.56 0 0 0 16 6.5 5.5 5.5 0 0 0 5.207 5.021C5.137 5.017 5.071 5 5 5a4 4 0 0 0 0 8h2.167M10 15V6m0 0L8 8m2-2 2 2"
              ></path>
            </svg>
            <p class="mb-2 text-sm text-gray-500">
              <span class="font-semibold">Click to upload</span> or drag and drop
            </p>
            <p class="text-xs text-gray-500 text-center">
              MP4 (too large videos can result in very long response times)
            </p>
          </div>
          <video
            id="videoPreview"
            class="absolute top-0 left-0 w-full h-full hidden"
            style="object-fit: cover"
            controls></video>
          <input
            id="dropzone-file"
            type="file"
            name="file"
            class="hidden"
            accept="video/mp4, video/x-msvideo, video/quicktime"
          />
        </label>
      </div>
    </div>
    <div
      id="content-aside-form"
      class="p-4 bg-white border border-gray-200 rounded-lg col-span-2 lg:col-span-1 shadow-sm dark:border-gray-700 sm:p-6 dark:bg-gray-800"
    >
      <fieldset class="grid grid-cols-3 gap-4">
        <legend class="sr-only">Model</legend>
        {
          submissions &&
            submissions.map((submission, index) => (
              <div>
                <label
                  for={submission.accessor}
                  class="block  cursor-pointer rounded-lg border border-gray-100 bg-white p-4 text-sm font-medium shadow-sm hover:border-gray-200 has-[:checked]:border-primary-500 has-[:checked]:ring-1 has-[:checked]:ring-primary-500"
                >
                  <div>
                    <p class="text-gray-700">{submission.title}</p>

                    {submission.modality === 'rgb_only' ? (
                      <span class="mt-1 text-gray-900">RGB ONLY</span>
                    ) : submission.modality === 'rgb_and_audio' ? (
                      <span class="mt-1 text-gray-900">RGB AND AUDIO</span>
                    ) : null}
                  </div>

                  <input
                    type="radio"
                    name="model"
                    value={submission.accessor}
                    id={submission.accessor}
                    class="sr-only"
                    hx-trigger="change"
                    hx-target="#content-below-form"
                    hx-get={`/playground/api/submission-info?accessor=${submission.accessor}`}
                    hx-swap="innerHTML"
                    checked={index === 0}
                  />
                </label>
              </div>
            ))
        }
      </fieldset>
      <button
        type="submit"
        class="mt-6 text-white bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800"
        >Upload</button
      >
    </div>
  </div>
</form>

<script>
  document
    .getElementById('dropzone-file')
    .addEventListener('change', function () {
      if (this.files && this.files[0]) {
        var reader = new FileReader();

        reader.onload = function (e) {
          var videoPreview = document.getElementById('videoPreview');
          var dropArea = document.getElementById('droparea');
          videoPreview.src = e.target.result;
          dropArea.classList.add('hidden');
          videoPreview.classList.remove('hidden');
        };

        reader.readAsDataURL(this.files[0]);
      }
    });
</script>

<script>
  import './InputForm';
</script>
